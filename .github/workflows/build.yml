name: Build

on:
  workflow_call:
    inputs:
      aws_account_id:
        required: true
        type: string
      aws_region:
        required: true
        type: string
      aws_role:
        required: true
        type: string
      repository_name:
        required: true
        type: string

env:
  TF_VAR_project_name: ${{ inputs.repository_name }}
  TF_VAR_region: ${{ inputs.aws_region }}
  TF_VAR_private_vpc_name: ecs-private-vpc
  TF_VAR_api_stage_name: dev
  TF_VAR_container_port: 3000

permissions:
  id-token: write
  contents: read
      
jobs:
  ecr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/${{ inputs.aws_role }}
          role-session-name: GitHubActions

      - name: Init
        shell: bash
        run: |
          cd tf/ecr
          terraform init
    
      - name: Deploy
        shell: bash
        id: deploy
        run: |
          cd tf/ecr
          terraform apply -auto-approve

  build:
    runs-on: ubuntu-latest
    outputs:
      image_uri: ${{ steps.set-image-uri.outputs.image_uri }}
    needs: ecr
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/${{ inputs.aws_role }}
          role-session-name: GitHubActions

      - name: Build and push detected changes
        id: build-image
        uses: ./.github/actions/build_image
        with:
          aws_account_id: ${{ inputs.aws_account_id }}
          aws_region: ${{ inputs.aws_region }}

      - name: Set image_uri output
        id: set-image-uri
        run: |
          echo "image_uri=${{ env.IMAGE_URI }}" >> $GITHUB_OUTPUT

      - name: Check image_uri
        run: "echo Image URI: ${{ env.IMAGE_URI }}"

  task:
    needs: build
    runs-on: ubuntu-latest
    env:
      TF_VAR_image_uri: ${{ needs.build.outputs.image_uri }}
    outputs:
      task_definition_arn: ${{ steps.set-envs.outputs.TASK_DEFINITION_ARN }}
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/${{ inputs.aws_role }}
          role-session-name: GitHubActions

      - name: Init
        shell: bash
        run: |
          cd tf/task
          terraform init
    
      - name: Deploy
        shell: bash
        id: deploy
        run: |
          cd tf/task
          terraform apply -auto-approve

      - name: Set env vars
        id: set-envs
        shell: bash
        run: |
          cd tf/task
          TASK_DEFINITION_ARN=$(terraform output -raw task_definition_arn)
          echo "TASK_DEFINITION_ARN=$TASK_DEFINITION_ARN" >> $GITHUB_OUTPUT
