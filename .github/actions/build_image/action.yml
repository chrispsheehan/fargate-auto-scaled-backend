name: Build and push image to ECR
description: Pushes an image to ECR when changes are detected in the source code.

inputs:
  aws_account_id:
    description: 'ECR aws account id'
    required: true
  aws_region:
    description: 'ECR aws region'
    required: true

runs:
  using: 'composite'
  steps:
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          src:
            - 'src/**'

    - if: steps.changes.outputs.src == 'true'
      name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - if: steps.changes.outputs.src == 'true'
      name: Set variables
      shell: bash
      run: |
        echo "LOCAL_IMAGE=${{ github.event.repository.name }}:local" >> $GITHUB_ENV
        echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

    - if: steps.changes.outputs.src == 'true'
      name: Build Docker Image
      shell: bash
      run: |
        docker build . -t $LOCAL_IMAGE
        docker tag $LOCAL_IMAGE ${{ inputs.aws_account_id }}.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com/${{ github.event.repository.name }}:$IMAGE_TAG

    - if: steps.changes.outputs.src == 'true'
      name: Push Docker Image to ECR
      shell: bash
      run: |
        aws ecr get-login-password --region ${{ env.aws_region }} | docker login --username AWS --password-stdin ${{ inputs.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com
        docker push ${{ inputs.aws_account_id }}.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com/${{ github.event.repository.name }}:$IMAGE_TAG
