name: Build and push image to DockerHub
description: Pushes a Docker image to DockerHub when changes are detected in the source code.

inputs:
  dockerhub_username:
    description: 'DockerHub Username'
    required: true
  dockerhub_password:
    description: 'DockerHub Password or Token'
    required: true

outputs:
  image_uri:
    description: "The URI of the built image"
    value: ${{ steps.set-image-uri.outputs.image_uri }}

runs:
  using: 'composite'
  steps:
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          src:
            - 'src/**'

    - if: steps.changes.outputs.src == 'true'
      name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - if: steps.changes.outputs.src == 'true'
      name: Set variables
      shell: bash
      run: |
        echo "LOCAL_IMAGE=${{ github.event.repository.name }}:local" >> $GITHUB_ENV
        echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

    - if: steps.changes.outputs.src == 'true'
      name: Build Docker Image
      shell: bash
      run: |
        docker build . -t $LOCAL_IMAGE
        docker tag $LOCAL_IMAGE ${{ inputs.dockerhub_username }}/${{ github.event.repository.name }}:$IMAGE_TAG

    - if: steps.changes.outputs.src == 'true'
      name: Push Docker Image to DockerHub
      shell: bash
      run: |
        echo "${{ inputs.dockerhub_password }}" | docker login --username "${{ inputs.dockerhub_username }}" --password-stdin
        docker push ${{ inputs.dockerhub_username }}/${{ github.event.repository.name }}:$IMAGE_TAG

    - if: steps.changes.outputs.src != 'true'
      name: Obtain latest tag from dockerhub
      shell: bash
      run: |
        IMAGE_TAG=$(curl -s "https://hub.docker.com/v2/repositories/${{ inputs.dockerhub_username }}/${{ github.event.repository.name }}/tags/?page_size=1&ordering=last_updated" | jq -r '.results[0].name')

    - name: Set Image URI
      id: set-image-uri
      shell: bash
      run: |
        IMAGE_URI="docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:$IMAGE_TAG"
        echo "Latest image URI: $IMAGE_URI"
        echo "image_uri=$IMAGE_URI" >> $GITHUB_OUTPUT
